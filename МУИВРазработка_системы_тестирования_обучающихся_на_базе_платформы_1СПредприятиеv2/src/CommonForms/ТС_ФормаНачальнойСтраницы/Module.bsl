///////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

//***********************************************************************
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийСтудент = ТекущийСтудент(ПараметрыСеанса.ТекущийПользователь);
	
	Если НЕ ЗначениеЗаполнено(ТекущийСтудент) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не найден студент связанный данным пользователем!");
	КонецЕсли;
	
	ПараметрыСеанса.ТС_ТекущийПользователь =  ТекущийСтудент;
	
	ЭтаФорма.ТекущийПользователь = ТекущийСтудент;
	ЭтаФорма.ПрограммыОбучения.Параметры.УстановитьЗначениеПараметра("Пользователь",ЭтаФорма.ТекущийПользователь);
	
	ЭтаФорма.Элементы.ГруппаПрограммыОбучения.Видимость = Константы.ТС_ИспользоватьПрограммыОбучения.Получить();

КонецПроцедуры

&НаСервере
Функция ТекущийСтудент(ТекущийПользователь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ТС_Студенты.Ссылка КАК Студент
		|ИЗ
		|	Справочник.ТС_Студенты КАК ТС_Студенты
		|ГДЕ
		|	ТС_Студенты.Пользователь = &Пользователь";
	Запрос.УстановитьПараметр("Пользователь", ТекущийПользователь);
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Студент;
	Иначе
		Возврат Справочники.ТС_Студенты.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции // ()



///////////////////////////////////////////////////////////////
// ДЕЙСТВИЯ ФОРМЫ

//***********************************************************************
&НаКлиенте
Процедура НастройкиПользователя(Команда)
	
	ОбработкаЗакрытия = Новый ОписаниеОповещения("НастройкиПользователяЗавершение",ЭтаФорма,);
	СтруктураПараметров = Новый Структура("Ключ",ЭтаФорма.ТекущийПользователь);
	ОткрытьФорму("Справочник.ТС_Студенты.Форма.ФормаЭлемента",СтруктураПараметров,,,,,ОбработкаЗакрытия);
	
КонецПроцедуры

//***********************************************************************
&НаКлиенте
Процедура НастройкиПользователяЗавершение(РезультатЗакрытия,ДополнительныеПараметры) Экспорт
	
	ОбновитьФорму(Неопределено);
	
КонецПроцедуры

//***********************************************************************
&НаКлиенте
Процедура ОбновитьФорму(Команда)
	
	ЭтаФорма.ОбновитьОтображениеДанных();
	Элементы.ПрограммыОбучения.Обновить(); 
	
КонецПроцедуры 

//***********************************************************************
&НаКлиенте
Процедура ПродолжитьОбучение(Команда)
	
	ТекущиеДанные = Элементы.ПрограммыОбучения.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		НачатьНовоеОбучение(Неопределено);	
	Иначе	
		СтруктураПараметров = Новый Структура(
			"Курс,Пользователь,ПрограммаОбучения",
			ТекущиеДанные.Курс,ЭтаФорма.ТекущийПользователь,ТекущиеДанные.ПрограммаОбучения);
		ФормаТестирования = ПолучитьФорму("Обработка.ТС_Тестирование.Форма.ФормаТестирования",СтруктураПараметров);
		ФормаТестирования.Открыть();
	КонецЕсли;	
	
КонецПроцедуры

//***********************************************************************
&НаКлиенте
Процедура НачатьНовоеОбучение(Команда)
	
	ФормаТестирования = ПолучитьФорму("Обработка.ТС_Тестирование.Форма.Форма");
	ФормаТестирования.Открыть();
	
КонецПроцедуры

//***********************************************************************
&НаКлиенте
Процедура ПрограммыОбученияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПродолжитьОбучение(Неопределено);
	
КонецПроцедуры




